//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfNotesAppClient1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Notes", Namespace="http://schemas.datacontract.org/2004/07/WcfNotesApp")]
    [System.SerializableAttribute()]
    public partial class Notes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        string Login(string email, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string email, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        int Register(string email, string pass, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        System.Threading.Tasks.Task<int> RegisterAsync(string email, string pass, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNote", ReplyAction="http://tempuri.org/IService1/AddNoteResponse")]
        int AddNote(string title, string details, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNote", ReplyAction="http://tempuri.org/IService1/AddNoteResponse")]
        System.Threading.Tasks.Task<int> AddNoteAsync(string title, string details, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNotes", ReplyAction="http://tempuri.org/IService1/getNotesResponse")]
        WcfNotesAppClient1.ServiceReference1.Notes[] getNotes(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNotes", ReplyAction="http://tempuri.org/IService1/getNotesResponse")]
        System.Threading.Tasks.Task<WcfNotesAppClient1.ServiceReference1.Notes[]> getNotesAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateNote", ReplyAction="http://tempuri.org/IService1/UpdateNoteResponse")]
        int UpdateNote(string title, string details, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateNote", ReplyAction="http://tempuri.org/IService1/UpdateNoteResponse")]
        System.Threading.Tasks.Task<int> UpdateNoteAsync(string title, string details, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNote", ReplyAction="http://tempuri.org/IService1/getNoteResponse")]
        WcfNotesAppClient1.ServiceReference1.Notes getNote(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNote", ReplyAction="http://tempuri.org/IService1/getNoteResponse")]
        System.Threading.Tasks.Task<WcfNotesAppClient1.ServiceReference1.Notes> getNoteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteNote", ReplyAction="http://tempuri.org/IService1/deleteNoteResponse")]
        int deleteNote(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteNote", ReplyAction="http://tempuri.org/IService1/deleteNoteResponse")]
        System.Threading.Tasks.Task<int> deleteNoteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WcfNotesAppClient1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WcfNotesAppClient1.ServiceReference1.IService1>, WcfNotesAppClient1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Login(string email, string pass) {
            return base.Channel.Login(email, pass);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string email, string pass) {
            return base.Channel.LoginAsync(email, pass);
        }
        
        public int Register(string email, string pass, string name) {
            return base.Channel.Register(email, pass, name);
        }
        
        public System.Threading.Tasks.Task<int> RegisterAsync(string email, string pass, string name) {
            return base.Channel.RegisterAsync(email, pass, name);
        }
        
        public int AddNote(string title, string details, string name) {
            return base.Channel.AddNote(title, details, name);
        }
        
        public System.Threading.Tasks.Task<int> AddNoteAsync(string title, string details, string name) {
            return base.Channel.AddNoteAsync(title, details, name);
        }
        
        public WcfNotesAppClient1.ServiceReference1.Notes[] getNotes(string name) {
            return base.Channel.getNotes(name);
        }
        
        public System.Threading.Tasks.Task<WcfNotesAppClient1.ServiceReference1.Notes[]> getNotesAsync(string name) {
            return base.Channel.getNotesAsync(name);
        }
        
        public int UpdateNote(string title, string details, int id) {
            return base.Channel.UpdateNote(title, details, id);
        }
        
        public System.Threading.Tasks.Task<int> UpdateNoteAsync(string title, string details, int id) {
            return base.Channel.UpdateNoteAsync(title, details, id);
        }
        
        public WcfNotesAppClient1.ServiceReference1.Notes getNote(int id) {
            return base.Channel.getNote(id);
        }
        
        public System.Threading.Tasks.Task<WcfNotesAppClient1.ServiceReference1.Notes> getNoteAsync(int id) {
            return base.Channel.getNoteAsync(id);
        }
        
        public int deleteNote(int id) {
            return base.Channel.deleteNote(id);
        }
        
        public System.Threading.Tasks.Task<int> deleteNoteAsync(int id) {
            return base.Channel.deleteNoteAsync(id);
        }
    }
}
